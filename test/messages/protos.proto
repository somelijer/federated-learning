syntax = "proto3";
package messages;



option go_package = "test/messages";




message Weights {
  repeated Conv1Weight conv1_weight = 1;
  repeated Conv1Weight conv2_weight = 2;
  repeated double conv1_bias = 3;
  repeated double conv2_bias = 4;
  repeated FcWeight fc1_weight = 5;
  repeated double fc1_bias = 6;
  repeated FcWeight fc2_weight = 7;
  repeated double fc2_bias = 8;
}

message Conv1Weight {
  repeated Conv1Weight2 conv1_weight = 1;
}

message Conv1Weight2 {
  repeated Conv1Weight3 conv1_weight = 1;
}

message Conv1Weight3 {
  double conv1_weight = 1;
}

message FcWeight {
  repeated FcWeight2 fc1_weight = 1;
}

message FcWeight2 {
  double fc1_weight = 1;
}

message LocalWeights {
  Weights weights = 1;
}

message RemoteWeights {
  Weights weights = 1;
}

message PingMessage {
  uint64 cnt = 1;
}

message PongMessage {
  uint64 cnt = 1;
}

message AggregatorPIDMsg {
  PID AggregatorPID = 1;
}

message OtherCommunicationPIDMsg {
  PID OtherCommPID = 1;
}

service Ponger {
  rpc Ping(PingMessage) returns (PongMessage) {}
}

message PID {
  string Address = 1;
  string Id = 2;
  uint32 request_id = 3;
}

//user messages
message PoisonPill {
}

message DeadLetterResponse {
  PID Target = 1;
}

//system messages
message Watch {
  PID Watcher = 1;
}

message Unwatch {
  PID Watcher = 1;
}

message Terminated {
  PID who = 1;
  TerminatedReason Why = 2;
}

enum TerminatedReason {
  Stopped = 0;
  AddressTerminated = 1;
  NotFound = 2;
}

message Stop {
}

message Touch {
}

message Touched {
  PID who = 1;
}
